<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
<xsd:include schemaLocation="902x13m1-AbsEvnt.xsd"/>
<xsd:include schemaLocation="ndmxml-2.0.0-master-2.0.xsd"/>

<!--********************************************************************************************************************** -->
<!-- Define Service Management Event time type-->
<!--********************************************************************************************************************** -->
	
	<xsd:element name="srvMgtEventTime" type="SrvMgtEventTimeType"/>
	<xsd:complexType name="SrvMgtEventTimeType">
		<xsd:attribute name="epochTimeSystem" use="required" >
			<xsd:simpleType>
				<xsd:restriction base="xsd:string" >
					<xsd:pattern value="UTC"/>
			</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="absoluteTime" type="CcsdsAsciiTimeCodeBType" use="required"/>
	</xsd:complexType>
	
	
<!--********************************************************************************************************************** -->
<!-- Define abstract Service Management Event -->
<!--********************************************************************************************************************** -->

	<xsd:element name="srvMgtAbstractEvent" type="SrvMgtAbstractEventType" abstract="true"/>
	<xsd:complexType name="SrvMgtAbstractEventType">
		<xsd:sequence>
			<!--  allow an Event time of type srvMgtEventTime	 -->
			<xsd:element ref="srvMgtEventTime" minOccurs="1" maxOccurs="1"/>
			<!-- allow a list of parameters derived from AbstractParameter -->
			<xsd:element ref="abstractParameter" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="type" type="xsd:string" use="required"/>
		<xsd:attribute name="user" type="xsd:string" use="required"/>
		<xsd:attribute name="description" type="xsd:string" use="optional"/>
		<xsd:attribute name="latestOffset" type="LatestOffsetType" use="optional"/>
		<xsd:attribute name="earliestOffset" type="EarliestOffsetType" use="optional"/>
		<xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
	</xsd:complexType>
	
	
<!--********************************************************************************************************************** -->
<!-- Define Planning Information Type List -->
<!--********************************************************************************************************************** -->

	<xsd:element name="planningInfoTypeList" type="PlanningInfoTypeListType" />
	<xsd:complexType name="PlanningInfoTypeListType">
		<xsd:sequence>
			<!-- allow a list of planningInfoTypes -->
	    	<xsd:element name="planningInfoType" type="xsd:string"   minOccurs="1" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define Functional Resource Parameter type -->
<!--********************************************************************************************************************** -->

	<xsd:element name="modResParm" type="ModResParmType"/>
	<xsd:complexType name="ModResParmType">
		<xsd:sequence>
			<!-- allow a list of parameters derived from AbstractParameter -->
			<xsd:element ref="abstractParameter" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="resName" type="xsd:string" use="required"/>
	</xsd:complexType>
	

<!--********************************************************************************************************************** -->
<!-- Define Abstract Aperture Location Class -->
<!--********************************************************************************************************************** -->

	<xsd:element name="apertureLocation" type="ApertureLocationType" abstract="true"/>
	<xsd:complexType name="ApertureLocationType">
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define classes derived from abstract Aperture Location -->
<!--********************************************************************************************************************** -->

	<xsd:element name="apertureReference" type="ApertureReferenceType" substitutionGroup="apertureLocation"/>
	<xsd:complexType name="ApertureReferenceType">
		<xsd:complexContent>
			<xsd:extension base="ApertureLocationType">
				<xsd:attribute name="siteRef" type="xsd:string" use="required" />
				<xsd:attribute name="apertureRef" type="xsd:string" use="optional" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="apertureCelestialBodyPosition" type="ApertureCelestialBodyPositionType" substitutionGroup="apertureLocation"/>
	<xsd:complexType name="ApertureCelestialBodyPositionType">
		<xsd:complexContent>
			<xsd:extension base="ApertureLocationType">
				<xsd:attribute name="celestialBody" type="xsd:string" use="required" />
				<xsd:attribute name="celestialBodyLat" use="required"> 
					<xsd:simpleType>
						<xsd:restriction base="xsd:double">
							<xsd:minInclusive value="-90.0"/>
							<xsd:maxInclusive value="90.0"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="celestialBodyLong" use="required"> 
					<xsd:simpleType>
						<xsd:restriction base="xsd:double">
							<xsd:minExclusive value="-360.0"/>
							<xsd:maxExclusive value="360.0"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="celestialBodyAltitude" use="optional"> 
					<xsd:simpleType>
						<xsd:restriction base="xsd:double">
							<xsd:minInclusive value="0.0"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
				<xsd:attribute name="apertureName" type="xsd:string" use="optional" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!--** Service Management Information Entity Header Types **-->
<!--********************************************************************************************************************** -->

	<xsd:complexType name="SrvMgtInfoEntityType">
		<xsd:sequence>
			<xsd:element ref="srvMgtHeader">
				<xsd:annotation>
					<xsd:documentation>substitution group head element</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element ref="srvMgtData" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>substitution group head element</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<xsd:element name="srvMgtHeader" type="SrvMgtHeaderType" abstract="true"/>
	<xsd:complexType name="SrvMgtHeaderType">
		<xsd:attribute name="originatingOrganization" type="xsd:string" use="required"/>
		<xsd:attribute name="generationTime" type="CcsdsAsciiTimeCodeBType" use="required"/>
		<xsd:attribute name="version" type="xsd:positiveInteger" use="required"/>
		<xsd:attribute name="startTime" type="CcsdsAsciiTimeCodeBType"/>
		<xsd:attribute name="endTime" type="CcsdsAsciiTimeCodeBType"/>
		<xsd:attribute name="purpose" type="xsd:string"/>
		<xsd:attribute name="description" type="xsd:string"/>
		<xsd:attribute name="securityClassification" type="xsd:string" use="optional"/>
	</xsd:complexType>


	<xsd:element name="srvMgtData" type="SrvMgtDataType" abstract="true"/>
	<xsd:complexType name="SrvMgtDataType" abstract="true"/>


<!--********************************************************************************************************************** -->
<!-- Define abstract Wrapper type                                                                                     -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractWrapper" type="AbstractWrapperType" abstract="true"/>
	<xsd:complexType name="AbstractWrapperType">
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define service agreement wrapper classes                                                                              -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractServiceAgreementWrapper" type="AbstractServiceAgreementWrapperType" abstract="true" substitutionGroup="abstractWrapper"/>
	<xsd:complexType name="AbstractServiceAgreementWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractWrapperType">
				<xsd:attribute name="serviceAgreementID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	

<!--********************************************************************************************************************** -->
<!-- Define report wrapper classes                                                                                         -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractReportWrapper" type="AbstractReportWrapperType" abstract="true" substitutionGroup="abstractWrapper"/>
	<xsd:complexType name="AbstractReportWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractWrapperType">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	

<!--********************************************************************************************************************** -->
<!-- Define abstract data submission wrapper class                                                                         -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractSubmissionWrapper" type="AbstractSubmissionWrapperType" abstract="true" substitutionGroup="abstractWrapper"/>
	<xsd:complexType name="AbstractSubmissionWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractWrapperType">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define event sequence wrapper classes                                                                                 -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractEventSeqWrapper" type="AbstractEventSeqWrapperType" abstract="true" substitutionGroup="abstractSubmissionWrapper"/>
	<xsd:complexType name="AbstractEventSeqWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSubmissionWrapperType">
				<xsd:attribute name="eventSequenceID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define configuration profile wrapper classes                                                                          -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractConfigProfileWrapper" type="AbstractConfigProfileWrapperType" abstract="true" substitutionGroup="abstractSubmissionWrapper"/>
	<xsd:complexType name="AbstractConfigProfileWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSubmissionWrapperType">
				<xsd:attribute name="configurationProfileID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define DDOR Scan Pattern wrapper classes                                                                          -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractDDORScanPatternWrapper" type="AbstractDDORScanPatternWrapperType" abstract="true" substitutionGroup="abstractSubmissionWrapper"/>
	<xsd:complexType name="AbstractDDORScanPatternWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSubmissionWrapperType">
				<xsd:attribute name="ddorScanPatternID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="ddorScanPatternWrapper" type="DDORScanPatternWrapperType" substitutionGroup="abstractDDORScanPatternWrapper"/>
	<xsd:complexType name="DDORScanPatternWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDDORScanPatternWrapperType">
				<xsd:sequence>
<!--********************************************************************************************************************** -->
<!--  DDOR Scan Pattern should be referenced here once defined as illustrated below.                                       -->
<!-- 					<xsd:element ref="ddorScanPattern" minOccurs="1" maxOccurs="1"/>	                               -->
<!--********************************************************************************************************************** -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



<!--********************************************************************************************************************** -->
<!-- Define Service Instance Configuration File wrapper classes                                                            -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractSICFWrapper" type="AbstractSICFWrapperType" abstract="true" substitutionGroup="abstractSubmissionWrapper"/>
	<xsd:complexType name="AbstractSICFWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSubmissionWrapperType">
				<xsd:attribute name="sicfID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="asciiSICFWrapper" type="AsciiSICFWrapperType" substitutionGroup="abstractSICFWrapper"/>
	<xsd:complexType name="AsciiSICFWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSICFWrapperType">
				<xsd:attribute name="sicfFormat" type="xsd:string" use="required" />
				<xsd:attribute name="sicfData" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



<!--********************************************************************************************************************** -->
<!-- Define trajectory data wrapper classes                                                                                -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractTrajWrapper" type="AbstractTrajWrapperType" abstract="true" substitutionGroup="abstractSubmissionWrapper"/>
	<xsd:complexType name="AbstractTrajWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractSubmissionWrapperType">
				<xsd:attribute name="trajectoryID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="oemWrapper" type="OemWrapperType" substitutionGroup="abstractTrajWrapper"/>
	<xsd:complexType name="OemWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajWrapperType">
				<xsd:sequence>
					<xsd:element ref="oem" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="ommWrapper" type="OmmWrapperType" substitutionGroup="abstractTrajWrapper"/>
	<xsd:complexType name="OmmWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajWrapperType">
				<xsd:sequence>
					<xsd:element ref="omm" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="opmWrapper" type="OpmWrapperType" substitutionGroup="abstractTrajWrapper"/>
	<xsd:complexType name="OpmWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajWrapperType">
				<xsd:sequence>
					<xsd:element ref="opm" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="tleWrapper" type="TleWrapperType" substitutionGroup="abstractTrajWrapper"/>
	<xsd:complexType name="TleWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajWrapperType">
				<xsd:sequence>
					<xsd:element ref="tle" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="TrajDataType">
		<xsd:sequence>
			<xsd:any minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="otherTrajWrapper" type="OtherTrajWrapperType" substitutionGroup="abstractTrajWrapper"/>
	<xsd:complexType name="OtherTrajWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajWrapperType">
				<xsd:sequence>
					<xsd:element name="trajData" type="TrajDataType" />
				</xsd:sequence>
				<xsd:attribute name="trajFormat" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define abstract service package classes                                                                               -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractSrvPkg" type="AbstractSrvPkgType" abstract="true" />
	<xsd:complexType name="AbstractSrvPkgType">
		<xsd:attribute name="sicfRef" type="xsd:string" use="required"/>	
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define Online service package classes                                                                                 -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractOnlineSrvPkg" type="AbstractOnlineSrvPkgType" substitutionGroup="abstractSrvPkg" abstract="true"/>
	<xsd:complexType name="AbstractOnlineSrvPkgType" >
		<xsd:complexContent>
			<xsd:extension base="AbstractSrvPkgType">
				<xsd:attribute name="trajectoryRef" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="onlineSrvPkgType1" type="OnlineSrvPkgType1Type" substitutionGroup="abstractOnlineSrvPkg" />
	<xsd:complexType name="OnlineSrvPkgType1Type" >
		<xsd:complexContent>
			<xsd:extension base="AbstractOnlineSrvPkgType">
				<xsd:sequence>
					<!-- Require at least 1 OnlineEvtSeqSrvDetails class -->
					<xsd:element ref="onlineSrvPkgType1Details" minOccurs="1" maxOccurs="unbounded"/>
					<!-- Permit a list of Modified Resource Parameters -->
					<xsd:element ref="modResParm" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="eventSequenceRef" type="xsd:string" use="optional"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="onlineSrvPkgType1Details" type="OnlineSrvPkgType1DetailsType" />
	<xsd:complexType name="OnlineSrvPkgType1DetailsType" >
		<xsd:sequence>
			<!-- Permit up to 1 DDOR Scan Pattern Details Class -->
			<xsd:element ref="ddorScanPatternDetails" minOccurs="0" maxOccurs="1"/>
			<!-- Permit a list of Modified Resource Parameters -->
			<xsd:element ref="modResParm" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="configProfileRef" type="xsd:string" use="required"/>	
	</xsd:complexType>


	<xsd:element name="ddorScanPatternDetails" type="DDORScanPatternDetailsType"  />
	<xsd:complexType name="DDORScanPatternDetailsType" >
		<xsd:sequence>
			<!-- Permit a list of Modified Resource Parameters -->
			<xsd:element ref="modResParm" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="DDORScanPatternRef" type="xsd:string" use="required"/>	
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!--  Define TLE structures                                                                                                -->
<!--********************************************************************************************************************** -->

	<xsd:element name="tle" type="TleType"/>
	<xsd:complexType name="TleType" mixed="true">


<!--********************************************************************************************************************** -->
<!--  TLE Line 0 is defined to be                                                                                          -->
<!--                                                                                                                       -->
<!--  Field 	Columns 	Content 	                                                                                   -->
<!--  1         01–24       Satellite name                                                                                 -->
<!--                                                                                                                       -->
<!--********************************************************************************************************************** -->

		<xsd:attribute name="tleLine0" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
				    <xsd:pattern value="[ -~]{24}"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>


<!--********************************************************************************************************************** -->
<!--  TLE Line 1 is defined to be                                                                                          -->
<!--                                                                                                                       -->
<!--  Field 	Columns 	Content 	                                                                                   -->
<!--  1         01–01       Line number                                                                                    -->
<!--  2         03–07       Satellite catalog number                                                                       -->
<!--  3         08–08       Classification (U=Unclassified, C=Classified, S=Secret)                                        -->
<!--  4         10–11       International Designator (last two digits of launch year)                                      -->
<!--  5         12–14       International Designator (launch number of the year)                                           -->
<!--  6         15–17       International Designator (piece of the launch)                                                 -->
<!--  7         19–20       Epoch Year (last two digits of year)                                                           -->
<!--  8         21–32       Epoch (day of the year and fractional portion of the day)                                      -->
<!--  9         34–43       First Derivative of Mean Motion aka the Ballistic Coefficient                                  -->
<!--  10        45–52       Second Derivative of Mean Motion (decimal point assumed)                                       -->
<!--  11        54–61       Drag Term aka Radiation Pressure Coefficient or BSTAR (decimal point assumed)                  -->
<!--  12        63–63       Ephemeris type (internal use only - always zero in distributed TLE data)                       -->
<!--  13        65–68       Element set number. Incremented when a new TLE is generated for this object.                   -->
<!--  14        69–69       Checksum (modulo 10)                                                                           -->
<!--                                                                                                                       -->
<!--   NOTE: Where decimal points are assumed, they are leading decimal points. The last two symbols in Fields 10 and 11   -->
<!--         of the first line give powers of 10 to apply to the preceding decimal.                                        -->
<!--                                                                                                                       -->
<!-- The format of TLE line 1 is as shown below                                                                            -->
<!--                                                                                                                       -->
<!-- "1 NNNNNC NNNNNAAA NNNNN.NNNNNNNN +.NNNNNNNN +NNNNN-N +NNNNN-N N NNNNN"                                               -->
<!--                                                                                                                       -->
<!-- where                                                                                                                 -->
<!--    Columns with a space or period can have no other character.                                                        -->
<!--    Columns with an 'N' can have any number 0-9 or, in some cases, a space.                                            -->
<!--    Columns with an 'A' can have any character A-Z or a space.                                                         -->
<!--    Column with a 'C' can only have a character representing the classification of the element set—normally either a   -->
<!--    'U' for unclassified data or an 'S' for secret data (of course, only unclassified data are publicly available).    -->
<!--    Columns with a '+' can have either a plus sign, a minus sign, or a space.                                          -->
<!--    Columns with a '-' can have either a plus or minus sign (if the rest of the field is not blank).                   -->
<!--                                                                                                                       -->
<!--********************************************************************************************************************** -->

		<xsd:attribute name="tleLine1" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[1][ ][ 0-9]{5}[USC][ ][ 0-9]{5}[ A-Z]{3}[ ][ 0-9]{2}[ 0-9]{3}[.][ 0-9]{8}[ ][ +\-][.][ 0-9]{8}[ ][ +\-][ 0-9]{5}[ +\-][ 0-9][ ][ +\-][ 0-9]{5}[ +\-][ 0-9][ ][ 0-9][ ][ 0-9]{5}"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>


<!--********************************************************************************************************************** -->
<!--  TLE Line 2 is defined to be                                                                                          -->
<!--                                                                                                                       -->
<!--  Field 	Columns 	Content 	                                                                                   -->
<!--  1         01–01       Line number                                                                                    -->
<!--  2         03–07       Satellite catalog number                                                                       -->
<!--  3         09-16       Inclination (degrees)                                                                          -->
<!--  4         18-25       Right Ascension of the Ascending Node (degrees)                                                -->
<!--  5         27-33       Eccentricity (decimal point assumed)                                                           -->
<!--  6         35-42       Argument of Perigee (degrees)                                                                  -->
<!--  7         44-51       Mean Anomaly (degrees)                                                                         -->
<!--  8         53-63       Mean Motion (revolutions per day)                                                              -->
<!--  9         64-68       Revolution number at epoch (revolutions)                                                       -->
<!--  10        69–69       Checksum (modulo 10)                                                                           -->
<!--                                                                                                                       -->
<!--   NOTE: Where decimal points are assumed, they are leading decimal points. The last two symbols in Fields 10 and 11   -->
<!--         of the first line give powers of 10 to apply to the preceding decimal.                                        -->
<!--                                                                                                                       -->
<!-- The format of TLE line 2 is as shown below                                                                            -->
<!--                                                                                                                       -->
<!-- "2 NNNNN NNN.NNNN NNN.NNNN NNNNNNN NNN.NNNN NNN.NNNN NN.NNNNNNNNNNNNNN"                                               -->
<!--                                                                                                                       -->
<!-- where                                                                                                                 -->
<!--    Columns with a space or period can have no other character.                                                        -->
<!--    Columns with an 'N' can have any number 0-9 or, in some cases, a space.                                            -->
<!--    Columns with an 'A' can have any character A-Z or a space.                                                         -->
<!--    Columns with a '+' can have either a plus sign, a minus sign, or a space.                                          -->
<!--    Columns with a '-' can have either a plus or minus sign (if the rest of the field is not blank).                   -->
<!--                                                                                                                       -->
<!--********************************************************************************************************************** -->


		<xsd:attribute name="tleLine2" use="required">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[2][ ][ 0-9]{5}[ ][ 0-9]{3}[.][ 0-9]{4}[ ][ 0-9]{3}[.][ 0-9]{4}[ ][ 0-9]{7}[ ][ 0-9]{3}[.][ 0-9]{4}[ ][ 0-9]{3}[.][ 0-9]{4}[ ][ 0-9]{2}[.][ 0-9]{14}"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>	
	</xsd:complexType>

</xsd:schema>
